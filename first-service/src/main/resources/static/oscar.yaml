openapi: 3.0.3
info:
  title: Oscar Service API
  description: REST API для управления коллекцией фильмов.
  version: "1.0.0"

servers:
  - url: http://localhost:8080/api/oscar
    description: Локальный сервер

paths:
  /directors/loosers/search:
    post:
      summary: Получить режиссёров без оскаров
      description: |
        Возвращает список фильмов с возможностью фильтрации, сортировки и пагинации.  
        Фильтрация передаётся в теле запроса в формате JSON.  

        Поддерживаются следующие операторы фильтрации:
        - `eq` — равно, например `"name[eq]": "Inception"`
        - `ne` — не равно, например `"genre[ne]": "DRAMA"`
        - `gt` — больше, например `"coordinates.x[gt]": 10`
        - `lt` — меньше, например `"operator.height[lt]": 180`
        - `gte` — больше или равно, например `"oscarsCount[gte]": 3`
        - `lte` — меньше или равно, например `"operator.weight[lte]": 80`
        - `in` — значение из списка, например `"genre[in]": ["THRILLER","FANTASY"]`

        Сортировка указывается в формате `"поле:asc|desc"`, допускаются вложенные поля, например `"coordinates.y:desc"`.
      requestBody:
        required: true
        description: |
          Фильтры по полям фильма, включая вложенные объекты.  
          Формат: `{ "field[operator]": value }`, например `"coordinates.x[gt]": 10`
          Сортировка в формате "поле:asc|desc", допускаются вложенные поля
        content:
          application/json:
            schema:
              type: object
              properties:
                filter:
                  type: object
                  description: |
                    Фильтры по полям фильма, включая вложенные объекты.  
                    Формат: `{ "field[operator]": value }`, например `"coordinates.x[gt]": 10`
                  additionalProperties:
                    oneOf:
                      - type: string
                      - type: number
                      - type: array
                sort:
                  type: array
                  description: Сортировка в формате "поле:asc|desc", допускаются вложенные поля
                  items:
                    type: string
                page:
                  type: integer
                  default: 1
                  minimum: 0
                size:
                  type: integer
                  default: 20
                  minimum: 1
                  maximum: 100
              required:
                - filter
      responses:
        '200':
          description: Список режиссёров
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                success:
                    $ref : '#/components/examples/DirectorExample'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /genres/redistribute-rewards/{from-genre}/{to-genre}:
    post:
      summary: Перераспределить Оскары между жанрами
      security:
        - Bearer: [ ]
      parameters:
        - in: path
          name: from-genre
          required: true
          description: Жанр, откуда забираются награды
          schema:
            $ref: './movies.yaml#/components/schemas/MovieGenre'
        - in: path
          name: to-genre
          required: true
          description: Жанр, куда передаются награды
          schema:
            $ref: './movies.yaml#/components/schemas/MovieGenre'
      responses:
        '200':
          description: Операция завершена успешно
          content:
            application/json:
              schema:
                type: object
                properties:
                  transferredCount:
                    type: integer
              examples:
                success:
                  value:
                    transferredCount: 5
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  securitySchemes:
    Bearer:
      type: apiKey
      in: header
      name: Authorization
      description: >
        Введите токен с префиксом `Bearer `, например: "Bearer abcde12345".

  responses:
    BadRequest:
      description: Неверный запрос
      content:
        application/json:
          schema:
            $ref: './movies.yaml#/components/schemas/Error'
          examples:
            error:
              $ref: './movies.yaml#/components/examples/BadRequestExample'

    Unauthorized:
      description: Требуется аутентификация
      content:
        application/json:
          schema:
            $ref: './movies.yaml#/components/schemas/Error'
          examples:
            error:
              $ref: './movies.yaml#/components/examples/UnauthorizedExample'

    Forbidden:
      description: Доступ запрещен
      content:
        application/json:
          schema:
            $ref: './movies.yaml#/components/schemas/Error'
          examples:
            error:
              $ref: './movies.yaml#/components/examples/ForbiddenExample'

    UnprocessableEntity:
      description: Нарушены бизнес-правила
      content:
        application/json:
          schema:
            $ref: './movies.yaml#/components/schemas/Error'
          examples:
            error:
              $ref: './movies.yaml#/components/examples/UnprocessableEntityExample'

    InternalError:
      description: Внутренняя ошибка сервера
      content:
        application/json:
          schema:
            $ref: './movies.yaml#/components/schemas/Error'
          examples:
            error:
              $ref: './movies.yaml#/components/examples/InternalErrorExample'
  examples:
    DirectorExample:
      value:
        - id: 1
          name: John Doe
          height: 180.5
          weight: 75
          location:
            x: 10
            y: 20
            z: 30
        - id: 2
          name: Jane Doe
          height: 170
          weight: 65
          location:
            x: 5
            y: 10
            z: 15